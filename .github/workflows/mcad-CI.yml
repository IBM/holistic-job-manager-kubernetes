# This workflow will build mcad and run unit test and E2E tests
name: MCAD-CI
on:
  pull_request:
    branches:
      - 'main'
      - 'release-*'

jobs:
  MCAD-CI:
    runs-on: ubuntu-latest
    steps:
      - name: run docker resource config
        run: |
          # sudo touch /etc/systemd/system/docker_limit.slice
          # cat <<EOF > /etc/systemd/system/docker_limit.slice
          # [Unit]
          # Description=Slice that limits docker resources
          # Before=slices.target
          # [Slice]
          # CPUAccounting=true
          # CPUQuota=50%
          # EOF
          # sudo systemctl start /etc/systemd/system/docker_limit.slice
          # new_content='{ "exec-opts": ["native.cgroupdriver=cgroupfs"], "cgroup-parent": "/docker_limit.slice" }'
          # sudo sed -i 's|{ "exec-opts": \["native.cgroupdriver=cgroupfs"\], "cgroup-parent": "/actions_job" }|'"$new_content"'|' /etc/docker/daemon.json
          # cat /etc/docker/daemon.json
          # sudo systemctl restart docker
          # sleep 10
          docker info | grep CPU
      - name: checkout code
        uses: actions/checkout@v3
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
          fetch-depth: 0

      - name: Set latest tag and Branch name
        run: |
          BRANCH=${{ github.event.pull_request.head.ref }}
          echo "GIT_BRANCH=$(echo "$BRANCH" | sed 's/[^A-Za-z0-9._-]/-/g' )" >> $GITHUB_ENV
          echo "TAG=$(git describe --abbrev=0 --tags)" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.10

      - name: Build
        run:
          make mcad-controller

      - name: Run Unit tests
        run: make run-test

      - name: Build Image
        run: |
          make images -e GIT_BRANCH=${{ env.GIT_BRANCH }} TAG=${{ env.GIT_BRANCH }}-${{ env.TAG }}

      - name: Run E2E tests
        run: |
          make run-e2e -e GIT_BRANCH=${{ env.GIT_BRANCH }} TAG=${{ env.GIT_BRANCH }}-${{ env.TAG }}
          
